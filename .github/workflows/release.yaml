name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Perform a dry run (no actual release)'
        required: false
        type: boolean
        default: true


# Releases need permission to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing content.
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Allow GoReleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Read current version + create tag
        run: |
          TAG=$(yq '.management.releaseVersion' .speakeasy/gen.lock)

          git config --global user.email "teamgko@graviteesource.com"
          git config --global user.name "Team GKO"

          git tag -a v$TAG -m "Release v$TAG"
          git push origin v$TAG
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.terraform_gpg_secret_key }}
          passphrase: ${{ secrets.terraform_gpg_passphrase }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
        with:
          args: ${{ inputs.dry_run && 'release --skip-publish' || 'release --clean' }}
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}