# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
openapi: 3.1.0
info:
  title: Gravitee
  description: "Gravitee API Management Terraform Provider (beta)\n\nYou can manage with Terraform the following:\n* APIs\n* Shared Policy Groups\n* Applications\n* Subscriptions\n\n[Go to our documentation web site for more about configuration, capabilities and examples](https://documentation.gravitee.io/apim/terraform) \n\nCompatible with APIM 4.9 and above\n\nCheckout other sections to configure, authenticate and start working with Gravitee resources"
  contact:
    name: DevX team
    email: team-gko@graviteesource.com
    url: https://www.gravitee.io/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
security:
  - BearerAuth: []
  - BasicAuth: []
  - CloudAuth: []
servers:
  - url: "https://eu.cloudgate.gravitee.io/apim/automation"
tags:
  - name: APIs
    description: Everything about APIs
  - name: Applications
    description: Everything about Applications
  - name: Shared Policy Group
    description: Everything about Shared Policy Groups
  - name: Subscriptions
    description: Everything about subscriptions
paths:
  # APIs
  /organizations/{orgId}/environments/{envId}/apis:
    put:
      operationId: createOrUpdateApis
      tags:
        - APIs
      summary: Create or update APIs from APISpec
      description: Create/update APIs from API Spec
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/dryRunQueryParam"
      requestBody:
        description: API Specification
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ApiV4Spec"
        required: true
      responses:
        "200":
          description: State of the successfully created/updated API
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiV4State"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: APIV4#create,update
      x-speakeasy-group: apis
      x-speakeasy-name-override: createOrUpdate
  /organizations/{orgId}/environments/{envId}/apis/{hrid}:
    parameters:
      - $ref: "#/components/parameters/orgIdParam"
      - $ref: "#/components/parameters/envIdParam"
      - $ref: "#/components/parameters/hridParam"
    get:
      operationId: getApi
      tags:
        - APIs
      summary: Get one API
      description: Get an API using HRID
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/hridParam"
      responses:
        "200":
          description: API successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiV4State"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: APIV4#read
      x-speakeasy-group: apis
      x-speakeasy-name-override: get
    delete:
      operationId: deleteApi
      tags:
        - APIs
      summary: Delete one API
      description: Delete an API using it's HRID
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/hridParam"
      responses:
        "204":
          description: API successfully deleted
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: APIV4#delete
      x-speakeasy-group: apis
      x-speakeasy-name-override: delete
  # Applications
  /organizations/{orgId}/environments/{envId}/applications:
    put:
      operationId: createOrUpdateApplications
      tags:
        - Applications
      summary: Create or update Applications from ApplicationSpec
      description: Create/update Applications from Application Spec
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/dryRunQueryParam"
      requestBody:
        description: Application specification
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ApplicationSpec"
        required: true
      responses:
        "200":
          description: State of the successfully created/updated Applications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationState"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: Application#create,update
      x-speakeasy-name-override: createOrUpdate
  /organizations/{orgId}/environments/{envId}/applications/{hrid}:
    parameters:
      - $ref: "#/components/parameters/orgIdParam"
      - $ref: "#/components/parameters/envIdParam"
      - $ref: "#/components/parameters/hridParam"
    get:
      operationId: getApplication
      tags:
        - Applications
      summary: Get one Application
      description: Get an Application using HRID
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/hridParam"
      responses:
        "200":
          description: Application successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationState"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: Application#read
      x-speakeasy-name-override: get
    delete:
      operationId: deleteApplication
      tags:
        - Applications
      summary: Delete one Application
      description: Delete an Application using HRID
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/hridParam"
      responses:
        "204":
          description: Application successfully deleted
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: Application#delete
      x-speakeasy-name-override: delete
  # API Subscription
  /organizations/{orgId}/environments/{envId}/apis/{apiHrid}/subscriptions:
    put:
      operationId: createOrUpdateApiSubscriptions
      tags:
        - Subscriptions
      summary: Create or update API Subscriptions from Subscription Spec
      description: Create/update API Subscription from Subscription Spec
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/apiHridParam"
      requestBody:
        description: Subscription specification
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/SubscriptionSpec"
        required: true
      responses:
        "200":
          description: State of the successfully created Subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionState"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: Subscription#create,update
      x-speakeasy-name-override: update
  /organizations/{orgId}/environments/{envId}/apis/{apiHrid}/subscriptions/{hrid}:
    parameters:
      - $ref: "#/components/parameters/orgIdParam"
      - $ref: "#/components/parameters/envIdParam"
      - $ref: "#/components/parameters/apiHridParam"
      - $ref: "#/components/parameters/hridParam"
    get:
      operationId: getApiSubscription
      tags:
        - Subscriptions
      summary: Get one API subscription
      description: Get an API subscription using HRID
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/apiHridParam"
        - $ref: "#/components/parameters/hridParam"
      responses:
        "200":
          description: API subscription successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionState"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: Subscription#read
      x-speakeasy-name-override: get
    delete:
      operationId: deleteApiSubscription
      tags:
        - Subscriptions
      summary: Delete an API subscription
      description: Delete an API subscription using HRID
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/apiHridParam"
        - $ref: "#/components/parameters/hridParam"
      responses:
        "204":
          description: Subscription successfully deleted
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: Subscription#delete
      x-speakeasy-name-override: delete
  # Shared Policy Groups
  /organizations/{orgId}/environments/{envId}/shared-policy-groups/{hrid}:
    parameters:
      - $ref: "#/components/parameters/orgIdParam"
      - $ref: "#/components/parameters/envIdParam"
      - $ref: "#/components/parameters/hridParam"
    get:
      operationId: getPolicyGroup
      tags:
        - Shared Policy Group
      summary: Get one policy group
      description: Get a policy group using HRID
      responses:
        "200":
          description: Shared policy group successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedPolicyGroupState"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: SharedPolicyGroup#read
      x-speakeasy-group: sharedPolicyGroups
      x-speakeasy-name-override: get
    delete:
      operationId: deletePolicyGroup
      tags:
        - Shared Policy Group
      summary: Delete one policy group
      description: Delete a shared policy group using HRID
      parameters:
        - $ref: "#/components/parameters/dryRunQueryParam"
      responses:
        "204":
          description: Shared Policy Group successfully deleted
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: SharedPolicyGroup#delete
      x-speakeasy-group: sharedPolicyGroups
      x-speakeasy-name-override: delete
  /organizations/{orgId}/environments/{envId}/shared-policy-groups:
    put:
      operationId: createOrUpdatePolicyGroup
      tags:
        - Shared Policy Group
      summary: Create or update Shared Policy Group from SharedPolicyGroupSpec
      description: Create/update Shared Policy Group from Shared Policy Group Spec
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/dryRunQueryParam"
      requestBody:
        description: Shared Policy Group Specification
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/SharedPolicyGroupSpec"
        required: true
      responses:
        "200":
          description: State of the successfully created / updated Shared Policy Group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedPolicyGroupState"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Error"
      x-speakeasy-entity-operation: SharedPolicyGroup#create,update
      x-speakeasy-group: sharedPolicyGroups
      x-speakeasy-name-override: createOrUpdate
components:
  schemas:
    Hrid:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_-]{2,}$'
      description: A unique human readable id identifying this resource
      examples:
        - my_demo_api
        - simple_demo_app
        - keyless_demo_plan
        - demo_subscription
        - demo_shared_policy_groups
      maxLength: 256
    ApiV4Spec:
      description: ApiV4DefinitionSpec defines the desired state of ApiDefinition.
      type: object
      properties:
        hrid:
          $ref: "#/components/schemas/Hrid"
          x-speakeasy-param-computed: false
        name:
          type: string
          description: API's name. Duplicate names can exists.
          examples:
            - My Api
          minLength: 1
          maxLength: 512
          x-speakeasy-param-computed: false
        version:
          type: string
          description: API's version. It's a simple string only used to help manage API versioning.
          examples:
            - 1.0.0
          minLength: 1
          maxLength: 64
          x-speakeasy-param-computed: false
        type:
          $ref: "#/components/schemas/ApiType"
          x-speakeasy-param-computed: false
        description:
          type: string
          description: Basic API documentation to describe what this API does.
          examples:
            - I can use many characters to describe this API.
          maxLength: 4000
          x-speakeasy-param-computed: false
        tags:
          type: array
          description: Sharding tags that restrict deployment to Gateways having those tags on. No tags means "always deploy".
          items:
            type: string
            maxLength: 64
          default: []
          uniqueItems: true
          examples:
            - ["europe"]
          x-speakeasy-param-computed: false
        listeners:
          type: array
          description: The list of listeners defining how this API can be called. They depend on the API type.
          items:
            $ref: "#/components/schemas/Listener"
          minItems: 1
          x-speakeasy-param-computed: false
        endpointGroups:
          type: array
          description: Common endpoints properties and container of endpoints specifying backends this API can call.
          items:
            $ref: "#/components/schemas/EndpointGroupV4"
          minItems: 1
          x-speakeasy-param-computed: false
        analytics:
          allOf:
            - $ref: "#/components/schemas/Analytics"
          x-speakeasy-param-computed: false
        failover:
          $ref: "#/components/schemas/FailoverV4"
          x-speakeasy-param-computed: false
        properties:
          description: Properties usable using EL.
          type: array
          items:
            $ref: "#/components/schemas/Property"
          default: []
          x-speakeasy-param-computed: true
          x-speakeasy-param-suppress-computed-diff: true
        resources:
          type: array
          description: Data resources usable in policy to access (mostly) external data (authentication, cache, registries...).
          items:
            $ref: "#/components/schemas/APIResource"
          default: []
          x-speakeasy-param-computed: true
          x-speakeasy-param-suppress-computed-diff: true
        plans:
          type: array
          description: Available plans for the API to define API security. You must provide a plan if `state` is `STARTED`. Plans are prioritized by their position in the list, with earlier entries having higher priority.
          items:
            $ref: '#/components/schemas/PlanV4'
          default: []
          x-speakeasy-param-computed: false
        flowExecution:
          $ref: "#/components/schemas/FlowExecution"
          x-speakeasy-param-computed: false
        flows:
          type: array
          description: Common flows for the API where traffic policies are configured.
          items:
            $ref: "#/components/schemas/FlowV4"
          default: []
          x-speakeasy-param-computed: false
        responseTemplates:
          type: object
          description: |
            Map of content-type dependent Response Templates for the API (Not applicable for Native
            API) to customize Gateway responses body on predefined errors.

            Key of the map is the error code.
          additionalProperties:
            type: object
            description: |
              Map of content-type that matched the `Accept` header content and a template configuration.

              Key is a MIME content type (eg. */*, application/json ...)
            additionalProperties:
              $ref: "#/components/schemas/ResponseTemplate"
          x-speakeasy-param-computed: false
        services:
          $ref: "#/components/schemas/ApiServices"
          x-speakeasy-param-computed: false
        groups:
          type: array
          description: Name or UUIDs of existing groups (of users) associated with this API.
          items:
            type: string
          default: []
          examples:
            - ["developers"]
          x-speakeasy-param-computed: false
        visibility:
          $ref: "#/components/schemas/Visibility"
          x-speakeasy-param-computed: false
        state:
          $ref: "#/components/schemas/LifecycleState"
          x-speakeasy-param-computed: false
        primaryOwner:
          $ref: "#/components/schemas/PrimaryOwner"
          x-speakeasy-param-computed: false
          x-speakeasy-terraform-ignore: true
        labels:
          type: array
          description: Informative labels for this API.
          items:
            type: string
            maxLength: 64
          uniqueItems: true
          default: []
          examples:
            - ["example"]
          x-speakeasy-param-computed: false
        metadata:
          type: array
          description: The list of API's metadata.
          items:
            $ref: "#/components/schemas/Metadata"
          uniqueItems: true
          default: []
          x-speakeasy-param-computed: false
        lifecycleState:
          $ref: "#/components/schemas/ApiLifecycleState"
          x-speakeasy-param-computed: false
        categories:
          type: array
          description: The list of category names (or UUID) associated with this API.
          items:
            type: string
          default: []
          examples:
            - ["Example APIs"]
          x-speakeasy-param-computed: false
        members:
          type: array
          description: Users that can access or manage the API (depending on their roles).
          items:
            $ref: '#/components/schemas/Member'
          default: []
          uniqueItems: true
          x-speakeasy-param-computed: true
          x-speakeasy-param-suppress-computed-diff: true
        notifyMembers:
          default: true
          description: |-
            If true, new members added to the API spec will
            be notified when the API is synced with APIM.
          type: boolean
          writeOnly: true
          x-speakeasy-param-computed: false
        pages:
          type: array
          description: Pages for the API. Elements positioned earlier in the list are displayed first, with subsequent elements appearing below.
          items:
            $ref: '#/components/schemas/PageV4'
          default: []
          x-speakeasy-param-computed: false
      required:
        - hrid
        - name
        - type
        - listeners
        - endpointGroups
        - version
        - lifecycleState
      x-speakeasy-entity: APIV4
    ApiV4State:
      description: API state
      allOf:
        - $ref: "#/components/schemas/ApiV4Spec"
        - type: object
          properties:
            errors:
              $ref: "#/components/schemas/Errors"
        - type: object
          properties:
            id:
              type: string
              description: API's uuid.
              x-speakeasy-param-computed: true
              x-speakeasy-param-suppress-computed-diff: true
              ## Should be computed but can't be
            crossId:
              type: string
              description: >-
                When promoting an API from one environment to the other, this ID identifies the API across those different environments.
              x-speakeasy-terraform-ignore: true
            environmentId:
              description: The environment ID of the API.
              type: string
            organizationId:
              description: The organization ID of the API.
              type: string
    ApplicationSpec:
      description: "Defines the desired state of Application. \nIt represents an API consumer. \nApplications act on behalf of users to request tokens, provide user identity information, and access protected resources from APIs. \nThey can be of different types, such as Simple, Web, SPA, Native, or Backend-to-backend, each with specific configuration requirements. \nApplications are also used to manage API keys, analytics, and subscriptions.\n"
      type: object
      properties:
        hrid:
          $ref: "#/components/schemas/Hrid"
          x-speakeasy-param-computed: false
        name:
          type: string
          description: Application's name. Duplicate names can exists.
          examples:
            - Example Application
          minLength: 1
          maxLength: 512
          x-speakeasy-param-computed: false
        description:
          type: string
          description: This is where you can clearly state the API’s purpose and what problems it solves to help drive API discovery and adoption by making it easier for developers to find and understand the API’s capabilities.
          examples:
            - This is the documentation explaining purpose of this Application.
          minLength: 1
          maxLength: 4000
          x-speakeasy-param-computed: false
        domain:
          type: string
          description: Application's domain.
          examples:
            - examples.com
          maxLength: 256
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        groups:
          type: array
          description: >-
            List of groups associated with the Application. This groups are names or UUIDs of existing groups in APIM.
          items:
            type: string
          default: []
          example: ["developers"]
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        pictureUrl:
          type: string
          description: Application's picture Url.
          examples:
            - "https://upload.wikimedia.org/wikipedia/fr/0/09/Logo_App_Store_d%27Apple.png"
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        notifyMembers:
          type: boolean
          description: |-
            If true, new members added to the Application spec will
            be notified when the Application is synced with APIM.
          default: false
          x-speakeasy-param-computed: false
        background:
          type: string
          description: Application's background url
          examples:
            - "https://upload.wikimedia.org/wikipedia/commons/d/df/Green_Red_Gradient_Background.png"
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        primaryOwner:
          $ref: "#/components/schemas/PrimaryOwner"
          readOnly: true
          x-speakeasy-param-computed: false
        settings:
          $ref: "#/components/schemas/ApplicationSettings"
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        metadata:
          type: array
          description: The list of Application's metadata.
          items:
            $ref: "#/components/schemas/Metadata"
          default: []
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        members:
          type: array
          description: Users that can access or manage this application (depending on their roles).
          items:
            $ref: '#/components/schemas/Member'
          uniqueItems: true
          default: []
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        status:
          type: string
          description: Application are either ACTIVE or ARCHIVED never actually deleted.
          enum:
            - ACTIVE
            - ARCHIVED
          default: ACTIVE
          examples:
            - ACTIVE
          x-speakeasy-param-computed: false
      required:
        - hrid
        - name
        - description
      x-speakeasy-entity: Application
    ApplicationSettings:
      type: object
      description: Application settings defines the configuration of consumers authentication. Depending on the control plane configuration some applications types may be restricted. `app` and `oauth` are mutually exclusive. If none is set it fallbacks to `app` without any property set.
      properties:
        app:
          $ref: '#/components/schemas/SimpleApplicationSettings'
          x-speakeasy-param-computed: false
          x-speakeasy-xor-with:
            - ../oauth
        oauth:
          $ref: '#/components/schemas/ApplicationOAuthClientSettings'
          x-speakeasy-param-computed: false
          x-speakeasy-xor-with:
            - ../app
        tls:
          $ref: '#/components/schemas/ApplicationTLSSettings'
          x-speakeasy-param-computed: false
    SimpleApplicationSettings:
      type: object
      description: Simple application settings
      properties:
        type:
          type: string
          description: Simple application type, for information
          examples:
            - web
          x-speakeasy-param-computed: false
        clientId:
          type: string
          description: Simple application client ID
          maxLength: 300
          examples:
            - example-client-id
          x-speakeasy-param-computed: false
    ApplicationOAuthClientSettings:
      type: object
      description: Application OAuth client settings. This require Dynamic Client Registration to be enabled at the environment level.
      properties:
        applicationType:
          type: string
          description: "OAuth client application type: \n`browser` for single page apps (SPA),\n`web` for regular web apps,\n`native` for smartphone apps,\n`backend_to_backend` for backend to backend.\n"
          enum:
            - browser
            - web
            - native
            - backend_to_backend
          examples:
            - browser
          x-speakeasy-param-computed: false
        grantTypes:
          type: array
          description: |
            OAuth client grant types. `authorization_code` is mandatory except when application type is `backend_to_backend`.
            `refresh_token` can be used only application type is `web` and `browser`.
            `password` (Resource Owner Password) only with applicationType `native`.
            `client_credentials` only works  when application type is `backend_to_backend`
          items:
            type: string
            enum:
              - authorization_code
              - implicit
              - refresh_token
              - password
              - client_credentials
          minItems: 1
          uniqueItems: true
          examples:
            - ["authorization_code"]
          x-speakeasy-param-computed: false
        redirectUris:
          description: OAuth client redirect Uris
          items:
            type: string
          type: array
          examples:
            - ["https://myapp.example.com/oauth/callback"]
          default: []
          x-speakeasy-param-computed: false
        additionalClientMetadata:
          type: object
          additionalProperties:
            type: string
          x-speakeasy-param-computed: false
      required:
        - applicationType
        - redirectUris
        - grantTypes
    ApplicationTLSSettings:
      description: Application TLS settings
      properties:
        clientCertificate:
          type: string
          description: Application TLS client certificate
          examples:
            - |
              -----BEGIN CERTIFICATE-----
              MIIDfjCCAmagAwIBAgIUfHj3mygGaOfd1u1Uj09L6vY5stcwDQYJKoZIhvcNAQEL
              BQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
              GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yNTA4MDUxNTUyMTBaFw0yNjA4
              MDUxNTUyMTBaMGkxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIDAVTdGF0ZTENMAsGA1UE
              BwwEQ2l0eTEVMBMGA1UECgwMT3JnYW5pemF0aW9uMRMwEQYDVQQLDApEZXBhcnRt
              ZW50MQ8wDQYDVQQDDAZjbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQDW862KHvjkq0EtwZJO/xw+QoTnRB0qm4E5+1wspC1er6tOm3hTJqCzfKwQ
              gZQKoP1Eq1PhM8GzceeqGjh8VZJaDmWwiJZdk5fprrZ1Lvwwl010lnh4MEhtN0Dw
              lwHSZCQ/vSvEDWJXugiE4F1OvAgi2+lIR5uYfyy2U6YbhlcVPdGAboBAFSQnxECF
              1gDpc3dFarPXfO/X3yf/BzAHys6IyMyqvBbur3K2UTO4gJL+59/DEyAwx7ofwukj
              TWpgGNDXlNFYwKk9qTSTbxdcofAVCjrBCEDTdoPkvrr5SxI7dV/ha5y33iOI4VPV
              o6vN/58RJz+ZMI0mbOBeluqBW+xBAgMBAAGjQjBAMB0GA1UdDgQWBBTjpQ+KfcmK
              w4hCptY8iK/LX9BOhzAfBgNVHSMEGDAWgBQYdcUWurMS8FEEMzcJlFm2d4Dk3DAN
              BgkqhkiG9w0BAQsFAAOCAQEAoyv0RhgEbRNmyFF6WoTeH4durjmZRe3SCtum0Mnv
              4TOGT4sstPdz0l24psroL33z3jtsY8IrbqnSfTXWbziSCanDXnMHOewLykgN0ld0
              PHa2i5naU5tMeGdWeM80ZTXU7GMiiCkgrRai/V7GkXNKYTIdBontiLpbxUaGLpjY
              aMYoCmHIEizazQP9xaAtm40CkYub1o40kgyQULyrwftqrlRtKshfYmHB6yxYVz60
              pikgTVupVbhYcNMLOVXO7Q31UEYfC7fxMGqzybXg67EhvzoykXhhYo3YqAjho2yh
              um2oEO8b5eQVAwRaooVLh0uqjZCpfN2ozscPpiTM9Pj3xQ==
              -----END CERTIFICATE-----
          x-speakeasy-param-computed: false
          x-speakeasy-terraform-custom-type:
            imports:
              - "github.com/gravitee-io/terraform-provider-apim/internal/provider/customtypes"
            schemaType: customtypes.TrimmedStringType{}
            valueType: customtypes.TrimmedString
      required:
        - clientCertificate
    ApplicationState:
      description: Application state that has been created/updated
      allOf:
        - $ref: "#/components/schemas/ApplicationSpec"
        - type: object
          properties:
            errors:
              $ref: "#/components/schemas/Errors"
        - type: object
          properties:
            id:
              type: string
              description: Application's uuid.
              examples:
                - 550e8400-e29b-41d4-a716-446655440000
              x-speakeasy-param-suppress-computed-diff: true
            environmentId:
              description: The environment ID of the Application.
              type: string
              default: DEFAULT
              examples:
                - DEFAULT
            organizationId:
              description: The organization ID of the Application.
              type: string
              default: DEFAULT
              examples:
                - DEFAULT
    SubscriptionSpec:
      description: Subscription specification
      type: object
      properties:
        hrid:
          $ref: "#/components/schemas/Hrid"
          x-speakeasy-param-computed: false
        applicationHrid:
          type: string
          description: Application's hrid selected to subscribe an API.
          example: demo-app
          x-speakeasy-param-computed: false
        planHrid:
          type: string
          description: API plan's hrid
          example: demo-plan
          x-speakeasy-param-computed: false
        endingAt:
          type: string
          format: date-time
          example: "2040-12-25T09:12:28Z"
          x-speakeasy-param-computed: false
          x-speakeasy-terraform-custom-type:
            imports:
              - "github.com/gravitee-io/terraform-provider-apim/internal/provider/customtypes"
            schemaType: customtypes.RFC3339Type{}
            valueType: customtypes.RFC3339
      required:
        - hrid
        - applicationHrid
        - planHrid
      x-speakeasy-entity: Subscription
    SubscriptionState:
      description: State of subscription that has been created/update
      allOf:
        - $ref: "#/components/schemas/SubscriptionSpec"
        - type: object
          properties:
            errors:
              $ref: "#/components/schemas/Errors"
        - type: object
          properties:
            id:
              type: string
              description: Subscription's uuid.
              x-speakeasy-param-suppress-computed-diff: true
            apiHrid:
              type: string
              description: The API's Hrid.
              example: demo-api
            environmentId:
              description: The environment ID of the Subscription.
              type: string
            organizationId:
              description: The organization ID of the Subscription.
              type: string
            startingAt:
              type: string
              description: Start validity date time of this Subscription
              format: date-time
              example: "2040-12-25T09:12:28+01:00"
              x-speakeasy-param-suppress-computed-diff: true
    SharedPolicyGroupState:
      description: State of Shared Policy Groups that has been created/updated
      allOf:
        - $ref: "#/components/schemas/SharedPolicyGroupSpec"
        - type: object
          properties:
            errors:
              $ref: "#/components/schemas/Errors"
        - type: object
          properties:
            id:
              description: The id of the shared policy group.
              type: string
              x-speakeasy-param-suppress-computed-diff: true
            crossId:
              description: The Cross ID is used to identify a shared policy group that has been promoted from one environment to another.
              type: string
              x-speakeasy-param-suppress-computed-diff: true
            environmentId:
              description: The environment ID of the shared policy group.
              type: string
            organizationId:
              description: The organization ID of the shared policy group.
              type: string
    SharedPolicyGroupSpec:
      description: Shared Policy Group Spec
      type: object
      properties:
        hrid:
          $ref: "#/components/schemas/Hrid"
          x-speakeasy-param-computed: false
        apiType:
          $ref: "#/components/schemas/ApiType"
          x-speakeasy-param-computed: false
        description:
          type: string
          description: The description of the shared policy group
          examples:
            - this is a shared policy group
          maxLength: 1024
          x-speakeasy-param-computed: false
        prerequisiteMessage:
          type: string
          description: The prerequisite message of the shared policy group. This message is displayed to the user to help understand the prerequisite to use the shared policy group.
          examples:
            - the resource cache "my-cache" is required
          maxLength: 1024
          x-speakeasy-param-computed: false
          x-speakeasy-param-suppress-computed-diff: true
        name:
          type: string
          description: The name of the shared policy group
          examples:
            - My Shared Policy Group
          maxLength: 512
          x-speakeasy-param-computed: false
        phase:
          $ref: "#/components/schemas/FlowPhase"
          x-speakeasy-param-computed: false
        steps:
          description: SharedPolicyGroup Steps
          items:
            $ref: "#/components/schemas/StepV4"
          type: array
          x-speakeasy-param-computed: false
      required:
        - hrid
        - apiType
        - name
        - phase
      x-speakeasy-entity: SharedPolicyGroup
    FlowPhase:
      type: string
      description: The execution phase of a policy.
      enum:
        - REQUEST
        - RESPONSE
        - INTERACT
        - CONNECT
        - PUBLISH
        - SUBSCRIBE
    PlanV4:
      description: API Plan
      type: object
      properties:
        hrid:
          $ref: "#/components/schemas/Hrid"
          x-speakeasy-param-computed: false
        name:
          type: string
          description: Name of the plan
          maxLength: 64
          x-speakeasy-param-computed: false
        description:
          type: string
          description: A description for this plan.
          x-speakeasy-param-computed: false
        security:
          $ref: '#/components/schemas/PlanSecurity'
          x-speakeasy-param-computed: false
        characteristics:
          type: array
          description: Plan informative characteristics
          items:
            type: string
            maxLength: 64
          x-speakeasy-param-computed: false
        excludedGroups:
          description: Access-control, UUID of groups excluded from this plan
          type: array
          items:
            type: string
          x-speakeasy-param-computed: false
        selectionRule:
          type: string
          maxLength: 256
          description: An EL expression that must return a boolean to enable the flow based on the request.
          x-speakeasy-param-computed: false
        status:
          $ref: '#/components/schemas/PlanStatus'
          x-speakeasy-param-computed: false
        tags:
          type: array
          description: Sharding tags that restrict deployment to Gateways having those tags on. No tags means "always deploy". This tags list must be a subset of the API's tags list.
          items:
            type: string
            maxLength: 64
          uniqueItems: true
          default: []
          x-speakeasy-param-computed: false
        type:
          $ref: '#/components/schemas/PlanType'
          x-speakeasy-param-computed: false
        validation:
          $ref: '#/components/schemas/PlanValidation'
          x-speakeasy-param-computed: false
        flows:
          type: array
          description: "Flows like API flows, composed of step running policies. \nAll steps are executed before the next plan flow or before the API flows,\nsame on the reponse, which means API reponse flows will always run last.\n"
          items:
            $ref: '#/components/schemas/FlowV4'
          x-speakeasy-param-computed: false
        mode:
          $ref: '#/components/schemas/PlanMode'
          x-speakeasy-param-computed: false
        generalConditionsHrid:
          type: string
          description: API page `hrid` that serves as general conditions documentation of this plan
          x-speakeasy-param-computed: false
      required:
        - hrid
        - name
        - status
        - type
        - mode
        - validation
        - security
    Member:
      description: Users that can manage an object (API, Application, etc.)
      type: object
      properties:
        source:
          type: string
          description: Where the memeber was created (system, idp, etc.)
          examples:
            - system
          x-speakeasy-param-computed: false
        sourceId:
          description: Id of the user in the source
          type: string
          examples:
            - "john.doe@example.com"
          x-speakeasy-param-computed: false
        role:
          description: The role of the user in regards of the managed oject (API, Application, etc.)
          examples:
            - REVIEWER
          type: string
          x-speakeasy-param-computed: false
      required:
        - source
        - sourceId
        - role
    Analytics:
      description: API analytics configuration to enable/disable what can be observed.
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether or not analytics are enabled.
          # default: true

          x-speakeasy-param-computed: false
        sampling:
          $ref: "#/components/schemas/Sampling"
          x-speakeasy-param-computed: false
        logging:
          $ref: "#/components/schemas/LoggingV4"
          x-speakeasy-param-computed: false
        tracing:
          $ref: "#/components/schemas/TracingV4"
          x-speakeasy-param-computed: false
    ApiLifecycleState:
      type: string
      description: The status of the API regarding the console.
      examples:
        - CREATED
      enum:
        - ARCHIVED
        - CREATED
        - DEPRECATED
        - PUBLISHED
        - UNPUBLISHED
    ApiServices:
      description: Api services (dynamic properties)
      type: object
      properties:
        dynamicProperty:
          $ref: "#/components/schemas/ServiceV4"
          x-speakeasy-param-computed: false
    ApiType:
      type: string
      description: API's type.
      examples:
        - MESSAGE
      enum:
        - MESSAGE
        - PROXY
        - NATIVE
    Visibility:
      type: string
      description: The visibility of the entity regarding the portal.
      default: PUBLIC
      examples:
        - PUBLIC
      enum:
        - PUBLIC
        - PRIVATE
    ChannelSelector:
      description: Channel selector
      type: object
      title: "ChannelSelector"
      required:
        - type
        - channel
        - channelOperator
      allOf:
        - $ref: "#/components/schemas/BaseSelector"
        - type: object
          properties:
            operations:
              type: array
              description: The list of operations associated with this channel selector.
              items:
                type: string
                description: The operation associated with this channel selector.
                enum:
                  - PUBLISH
                  - SUBSCRIBE
              uniqueItems: true
            channel:
              type: string
              description: The channel of the selector
              examples:
                - /my/channel
              default: /
            channelOperator:
              $ref: "#/components/schemas/Operator"
            entrypoints:
              type: array
              description: Among all entrypoints types, restrict which one will trigger this flow. Unset or empty means "all types".
              items:
                type: string
                maxLength: 32
              uniqueItems: true
              examples:
                - ["mcp"]
                - ["webhook"]
                - ["http-proxy"]
                - ["native-kafka"]
                - ["http-post"]
                - ["agent-to-agent"]
                - ["tcp-proxy"]
                - ["http-get"]
                - ["websocket"]
    ConditionSelector:
      description: Condition selector
      type: object
      title: "ConditionSelector"
      required:
        - type
        - condition
      allOf:
        - $ref: "#/components/schemas/BaseSelector"
        - type: object
          properties:
            condition:
              type: string
              description: The EL condition of the selector
              examples:
                - "{#jsonPath(payload, '$.myField') == 'myValue'}"
    Cors:
      description: Http listener Cross-Origin Resource Sharing
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable CORS
          x-speakeasy-param-computed: false
        allowCredentials:
          type: boolean
          description: |
            `Access-Control-Allow-Credentials`: Indicates whether or not the response to the request can be exposed when the credentials flag is true.
          x-speakeasy-param-computed: false
        allowHeaders:
          type: array
          description: |
            `Access-Control-Allow-Headers`: Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.
          items:
            type: string
          uniqueItems: true
          x-speakeasy-param-computed: false
        allowMethods:
          description: |
            `Access-Control-Allow-Methods`: Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request. HTTP methods that are allow to access the resource.
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - "*"
              - GET
              - DELETE
              - PATCH
              - POST
              - PUT
              - OPTIONS
              - TRACE
              - HEAD
          x-speakeasy-param-computed: false
        allowOrigin:
          uniqueItems: true
          description: |
            `Access-Control-Allow-Origin`: The origin parameter specifies a URI that may access the resource. Scheme, domain and port are part of the same-origin definition.
            If you choose to enable '*' it means that is allows all requests, regardless of origin. URIs RegExp patterns that may access the resource
          type: array
          items:
            type: string
          examples:
            - ["*", "http://api.acme\\.com", ".*\\.api\\.acme\\.com"]
          x-speakeasy-param-computed: false
        exposeHeaders:
          description: |
            `Access-Control-Expose-Headers`: This header lets a server whitelist headers that browsers are allowed to access.
          uniqueItems: true
          type: array
          items:
            type: string
          examples:
            - ["Content-Type"]
          x-speakeasy-param-computed: false
        maxAge:
          description: How long (in seconds) the results of a preflight request can be cached (-1 if disabled).
          type: integer
          format: int32
          default: -1
          x-speakeasy-param-computed: false
        runPolicies:
          description: Allow the Gateway to run policies during in pre-flight request
          type: boolean
          x-speakeasy-param-computed: false
    Dlq:
      description: Dead Letter Queue to process undelivered messages.
      type: object
      properties:
        endpoint:
          type: string
          description: The endpoint of the DLQ.
          x-speakeasy-param-computed: false
    EndpointV4:
      description: API endpoint
      type: object
      properties:
        name:
          type: string
          description: The name of the endpoint
          examples:
            - default-endpoint
          x-speakeasy-param-computed: false
        type:
          type: string
          description: The type of endpoint
          examples:
            - http-proxy
          x-speakeasy-param-computed: false
        weight:
          type: integer
          format: int32
          description: The weight of the endpoint for the load balancer algorythm.
          default: 1
          x-speakeasy-param-computed: false
        inheritConfiguration:
          type: boolean
          description: Enables shared configuration inheritance.
          default: false
          x-speakeasy-param-computed: false
        configuration:
          type: object
          description: JSON Configuration specific to this endpoint that cannot be define at the group level.
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
        sharedConfigurationOverride:
          type: object
          description: JSON Configuration that replaces the shared configuration defined at the group level.
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
        services:
          $ref: "#/components/schemas/EndpointServices"
          x-speakeasy-param-computed: false
        secondary:
          type: boolean
          description: Define this endpoint as fallback endpoint in case other endpoints are no longer responding.
          default: false
          x-speakeasy-param-computed: false
        tenants:
          type: array
          description: The list of Getaway's tenants on which the endpoint can be used.
          items:
            type: string
          x-speakeasy-param-computed: false
      required:
        - type
    EndpointGroupV4:
      description: API Endpoint Group
      type: object
      properties:
        name:
          type: string
          description: The name of the endpoint group
          examples:
            - default-endpoint-group
          x-speakeasy-param-computed: false
        type:
          type: string
          description: The type of the endpoint group
          examples:
            - http-proxy
          x-speakeasy-param-computed: false
        loadBalancer:
          $ref: "#/components/schemas/LoadBalancer"
          x-speakeasy-param-computed: false
        sharedConfiguration:
          description: JSON configuration for the `type` of `endpoints` that will be shared across all endpoints.
          type: object
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
        endpoints:
          type: array
          description: All endpoints of this API.
          items:
            $ref: "#/components/schemas/EndpointV4"
          x-speakeasy-param-computed: false
        services:
          $ref: "#/components/schemas/EndpointGroupServices"
          x-speakeasy-param-computed: false
      required:
        - type
    EndpointGroupServices:
      description: API Endpoint Group Services
      type: object
      properties:
        discovery:
          $ref: "#/components/schemas/ServiceV4"
          x-speakeasy-param-computed: false
        healthCheck:
          $ref: "#/components/schemas/ServiceV4"
          x-speakeasy-param-computed: false
    EndpointServices:
      description: API Endpoint Services
      type: object
      properties:
        healthCheck:
          $ref: "#/components/schemas/ServiceV4"
          x-speakeasy-param-computed: false
    Entrypoint:
      description: API Endpoint
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: The type of the entrypoint
          examples:
            - http-get
          x-speakeasy-param-computed: false
        qos:
          $ref: "#/components/schemas/Qos"
          x-speakeasy-param-computed: false
        dlq:
          $ref: "#/components/schemas/Dlq"
          x-speakeasy-param-computed: false
        configuration:
          description: JSON configuration for the selected `type`.
          type: object
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
    FlowV4:
      description: API or PLan Flow
      type: object
      properties:
        name:
          type: string
          description: Flow's name.
          examples:
            - My Flow
          maxLength: 256
          x-speakeasy-param-computed: false
        enabled:
          type: boolean
          description: Is the flow enabled.
          default: true
          x-speakeasy-param-computed: false
        selectors:
          type: array
          items:
            $ref: "#/components/schemas/Selector"
          x-speakeasy-param-computed: false
        request:
          type: array
          description: Request flow steps used for PROXY and MESSAGE APIs
          items:
            $ref: "#/components/schemas/StepV4"
          x-speakeasy-param-computed: false
        response:
          type: array
          description: Response flow steps used for PROXY and MESSAGE APIs
          items:
            $ref: "#/components/schemas/StepV4"
          x-speakeasy-param-computed: false
        subscribe:
          type: array
          description: Subscribe flow steps used for MESSAGE and NATIVE APIs
          items:
            $ref: "#/components/schemas/StepV4"
          x-speakeasy-param-computed: false
        publish:
          type: array
          description: Publish flow steps used for MESSAGE and NATIVE APIs
          items:
            $ref: "#/components/schemas/StepV4"
          x-speakeasy-param-computed: false
        connect:
          type: array
          description: Connect flow steps used for NATIVE APIs
          items:
            $ref: "#/components/schemas/StepV4"
          x-speakeasy-param-computed: false
        interact:
          type: array
          description: Interact flow steps used for NATIVE APIs
          items:
            $ref: "#/components/schemas/StepV4"
          x-speakeasy-param-computed: false
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          description: Flow's informative tags.
          examples:
            - [tag1, tag2]
          uniqueItems: true
          x-speakeasy-param-computed: false
      required:
        - enabled
    FlowExecution:
      description: Flow execution enablement (Not applicable for Native API)
      type: object
      properties:
        mode:
          $ref: "#/components/schemas/FlowMode"
          x-speakeasy-param-computed: false
        matchRequired:
          type: boolean
          description: To indicate failure if no flow matches the request.
          default: false
          x-speakeasy-param-computed: false
    FlowMode:
      type: string
      description: "DEFAULT : all flows that match the conditions are executed in the order they are defined BEST_MATCH: only the best matching flow will be executed"
      examples:
        - BEST_MATCH
      default: DEFAULT
      enum:
        - BEST_MATCH
        - DEFAULT
    HttpListener:
      description: HTTP Listener
      type: object
      title: "HttpListener"
      required:
        - type
      allOf:
        - $ref: "#/components/schemas/BaseListener"
        - type: object
          properties:
            paths:
              description: One of the possible context paths of this API
              type: array
              minItems: 1
              items:
                $ref: "#/components/schemas/PathV4"
            cors:
              $ref: "#/components/schemas/Cors"
    HttpMethod:
      type: string
      description: The method of the selector
      examples:
        - GET
      enum:
        - CONNECT
        - DELETE
        - GET
        - HEAD
        - OPTIONS
        - PATCH
        - POST
        - PUT
        - TRACE
        - OTHER
    HttpSelector:
      description: HTTP selector
      type: object
      title: "HttpSelector"
      required:
        - type
        - path
        - pathOperator
      allOf:
        - $ref: "#/components/schemas/BaseSelector"
        - type: object
          properties:
            path:
              type: string
              description: The path to match
              examples:
                - /my/path
              default: /
              maxLength: 256
            pathOperator:
              $ref: "#/components/schemas/Operator"
            methods:
              type: array
              description: Methods to match, unset or empty means "any"
              items:
                $ref: "#/components/schemas/HttpMethod"
              uniqueItems: true
    Listener:
      description: Listener
      oneOf:
        - $ref: "#/components/schemas/HttpListener"
        - $ref: "#/components/schemas/SubscriptionListener"
        - $ref: "#/components/schemas/TcpListener"
        - $ref: "#/components/schemas/KafkaListener"
      discriminator:
        propertyName: type
        mapping:
          HTTP: "#/components/schemas/HttpListener"
          TCP: "#/components/schemas/TcpListener"
          SUBSCRIPTION: "#/components/schemas/SubscriptionListener"
          KAFKA: "#/components/schemas/KafkaListener"
    BaseListener:
      description: Base listener
      type: object
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/ListenerType"
          x-speakeasy-param-computed: false
        entrypoints:
          description: A list of possible entrypoint of the same type.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Entrypoint"
          x-speakeasy-param-computed: false
        servers:
          type: array
          description: Restrict the API to a given "server id", when the gateway runs in multiple servers mode (several ports per protocol).
          items:
            type: string
          x-speakeasy-param-computed: false
      discriminator:
        propertyName: type
        mapping:
          HTTP: "#/components/schemas/HttpListener"
          TCP: "#/components/schemas/TcpListener"
          SUBSCRIPTION: "#/components/schemas/SubscriptionListener"
          KAFKA: "#/components/schemas/KafkaListener"
    ListenerType:
      type: string
      description: Listener type.
      examples:
        - HTTP
      enum:
        - HTTP
        - SUBSCRIPTION
        - TCP
        - KAFKA
    LoadBalancer:
      description: Load Balancer to distribute traffic between endpoints.
      type: object
      properties:
        type:
          type: string
          description: Load balancer type.
          examples:
            - ROUND_ROBIN
          default: ROUND_ROBIN
          enum:
            - RANDOM
            - ROUND_ROBIN
            - WEIGHTED_RANDOM
            - WEIGHTED_ROUND_ROBIN
          x-speakeasy-param-computed: false
      required:
        - type
    LoggingV4:
      description: API logging configuration (Not for native APIs)
      type: object
      properties:
        condition:
          type: string
          description: Filter using EL what request should be logged
          examples:
            - "{#request.headers['Content-Type'][0] == 'application/json'}"
          x-speakeasy-param-computed: false
        messageCondition:
          type: string
          description: Filter using EL what message should be logged
          examples:
            - "{ #message.headers['Content-Type'][0] == 'application/json'}"
          x-speakeasy-param-computed: false
        content:
          $ref: "#/components/schemas/LoggingContentV4"
          x-speakeasy-param-computed: false
        phase:
          $ref: "#/components/schemas/LoggingPhase"
          x-speakeasy-param-computed: false
        mode:
          $ref: "#/components/schemas/LoggingModeV4"
          x-speakeasy-param-computed: false
    LoggingContentV4:
      description: API logging content when one of logging mode is enabled (Not for native APIs)
      type: object
      properties:
        headers:
          type: boolean
          description: Enable to log request headers
          x-speakeasy-param-computed: false
        messageHeaders:
          type: boolean
          description: Enable to log message headers (Message APIs only)
          x-speakeasy-param-computed: false
        payload:
          type: boolean
          description: Enable to log request headers (Proxy APIs only)
          x-speakeasy-param-computed: false
        messagePayload:
          type: boolean
          description: Enable to log message headers (Message APIs only)
          x-speakeasy-param-computed: false
        messageMetadata:
          type: boolean
          description: Enable to log message metadata (Message APIs only)
          x-speakeasy-param-computed: false
    LoggingModeV4:
      description: API logging mode (Not for native APIs)
      type: object
      properties:
        endpoint:
          type: boolean
          description: Enables endpoint logging
          x-speakeasy-param-computed: false
        entrypoint:
          type: boolean
          description: Enables entrypoint logging
          x-speakeasy-param-computed: false
    LoggingPhase:
      description: Logging phase when one of logging mode is enabled (Not for native APIs)
      type: object
      properties:
        request:
          type: boolean
          description: Enables logging durring request phase
          x-speakeasy-param-computed: false
        response:
          type: boolean
          description: Enables logging durring response phase
          x-speakeasy-param-computed: false
    TracingV4:
      description: OpenTelemetry tracing (Not for native APIs)
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable OpenTelemetry tracing
          x-speakeasy-param-computed: false
        verbose:
          type: boolean
          description: Enable technical tracing to get more details on request execution. Be careful this settings can generate more noise and can impact performance.
          x-speakeasy-param-computed: false
    Operator:
      type: string
      description: Operator function to match a URI path
      examples:
        - EQUALS
      default: STARTS_WITH
      enum:
        - EQUALS
        - STARTS_WITH
    PageV4:
      description: Documentation page.
      type: object
      properties:
        hrid:
          $ref: "#/components/schemas/Hrid"
          x-speakeasy-param-computed: false
        crossId:
          type: string
          description: Page's cross uuid.
          examples:
            - 00f8c9e7-78fc-4907-b8c9-e778fc790750
          readOnly: true
          x-speakeasy-param-computed: false
        name:
          type: string
          description: |
            This is the display name of the page in APIM and on the portal.
            This field can be edited safely if you want to rename a page.
          examples:
            - My Page
          maxLength: 64
          x-speakeasy-param-computed: false
        type:
          $ref: "#/components/schemas/PageType"
          x-speakeasy-param-computed: false
        content:
          type: string
          description: The content of the page, if any.
          examples:
            - My Page content
          x-speakeasy-param-computed: false
        published:
          type: boolean
          description: If true, the page will be accessible from the portal (default is false)
          examples:
            - true
          default: false
          x-speakeasy-param-computed: false
        visibility:
          $ref: "#/components/schemas/Visibility"
          x-speakeasy-param-computed: false
        source:
          $ref: "#/components/schemas/PageSource"
          x-speakeasy-param-computed: false
        configuration:
          type: object
          description: Key/value page configuration (Configure swagger UI or or use Redoc instead)
          additionalProperties:
            type: string
            maxLength: 200
          examples:
            - viewer: Redoc
          x-speakeasy-param-computed: false
        homepage:
          type: boolean
          description: If true, this page will be displayed as the homepage of your API documentation.
          examples:
            - true
          default: false
          x-speakeasy-param-computed: false
        parentHrid:
          type: string
          description: "If your page contains a folder, setting this field to the folder's hrid will be reflected \ninto APIM by making the page a child of this folder.\n"
          examples:
            - guides
          x-speakeasy-param-computed: false
      required:
        - hrid
        - name
        - type
        - visibility
    PageType:
      type: string
      description: The type of the documentation page or folder.
      examples:
        - MARKDOWN
      enum:
        - ASCIIDOC
        - ASYNCAPI
        - MARKDOWN
        - MARKDOWN_TEMPLATE
        - SWAGGER
        - FOLDER
        - LINK
        - ROOT
        - SYSTEM_FOLDER
        - TRANSLATION
    PageSource:
      description: "Allow you to fetch pages from various external sources, \noverriding page content each time the source is fetched.\n"
      type: object
      properties:
        type:
          type: string
          description: The type of the page source (fetcher plugin ID).
          examples:
            - http-fetcher
            - git-fetcher
            - gitlab-fetcher
            - github-fetcher
            - bitbucket-fetcher
          maxLength: 64
          x-speakeasy-param-computed: false
        configuration:
          type: object
          description: JSON object configuration of the fetch plugin.
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
    PathV4:
      description: API Path specification
      type: object
      properties:
        host:
          type: string
          description: Virtual host required to access this API. (`Host` or `:Authority` headers, remote address for websockets)
          x-speakeasy-param-computed: false
        path:
          type: string
          default: "/"
          x-speakeasy-param-computed: false
        overrideAccess:
          type: boolean
          description: Override default organization entrypoint with `host`
          default: false
          x-speakeasy-param-computed: false
      required:
        - path
    PlanSecurity:
      description: API plan security
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PlanSecurityType"
          x-speakeasy-param-computed: false
        configuration:
          description: JSON Object to configure specific attributes of a Plan.
          type: object
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
      required:
        - type
    PlanSecurityType:
      type: string
      description: API Plan security implementation.
      examples:
        - KEY_LESS
      enum:
        - KEY_LESS
        - OAUTH2
        - JWT
        - MTLS
    PlanStatus:
      type: string
      description: Plan status, only `PUBLISHED` makes the plan available at runtime.
      examples:
        - STAGING
      enum:
        - STAGING
        - PUBLISHED
        - DEPRECATED
        - CLOSED
    PlanType:
      type: string
      description: "Only one possible type: API"
      examples:
        - API
      enum:
        - API
        - CATALOG
      default: API
    PlanValidation:
      type: string
      description: |
        Specifies if subscriptions must be manually validated by a human actor.
        For automation API, it is default to `AUTO`.
      examples:
        - AUTO
      enum:
        - AUTO
        - MANUAL
      default: AUTO
    PlanMode:
      type: string
      description: The behavioural mode of the Plan (Standard for classical plan, Push for subscription plan).
      examples:
        - STANDARD
      enum:
        - STANDARD
        - PUSH
    PrimaryOwner:
      description: User owner of this. Can perform all possible actions on it.
      type: object
      properties:
        id:
          type: string
          description: Owner's uuid.
          examples:
            - 00f8c9e7-78fc-4907-b8c9-e778fc790750
          x-speakeasy-param-computed: false
        email:
          type: string
          description: Owner's email. Can be null if owner is a group.
          examples:
            - "john.doe@example.com"
          x-speakeasy-param-computed: false
        displayName:
          type: string
          description: Owner's name.
          examples:
            - John Doe
          minLength: 1
          x-speakeasy-param-computed: false
        type:
          $ref: "#/components/schemas/MembershipMemberType"
          x-speakeasy-param-computed: false
      x-speakeasy-terraform-ignore: true
    Property:
      description: API property can be used within the API using EL expression `{#api.properties['key']}.
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Property key.
          type: string
          x-speakeasy-param-computed: false
        value:
          description: Property value.
          type: string
          x-speakeasy-param-computed: false
        encrypted:
          description: When the value has been encrypted in database.
          type: boolean
          readOnly: true
          x-speakeasy-param-computed: false
        dynamic:
          description: When the value was populated from dynamic property service.
          type: boolean
          x-speakeasy-param-computed: false
        encryptable:
          description: When the input value needs to be encrypted.
          type: boolean
          writeOnly: true
          x-speakeasy-param-computed: false
    Qos:
      type: string
      description: Type of the quality of service (for message APIs).
      examples:
        - NONE
      default: AUTO
      enum:
        - NONE
        - AUTO
        - AT_MOST_ONCE
        - AT_LEAST_ONCE
    APIResource:
      description: API resource
      type: object
      properties:
        name:
          description: API resource name
          type: string
          x-speakeasy-param-computed: false
        type:
          description: Resource type (resource plugin ID)
          type: string
          examples:
            - cache
            - cache-redis
            - auth-provider-ldap-resource
            - oauth2-am-resource
            - oauth2
            - oauth2-keycloak-resource
            - auth-provider-inline-resource
            - auth-provider-http-resource
            - storage-azure-blob
            - ai-vector-store-redis
            - ai-vector-store-aws-s3
            - ai-model-text-classification
            - confluent-schema-registry
            - content-provider-inline-resource
          x-speakeasy-param-computed: false
        configuration:
          description: JSON Object configuration specific to this resource.
          type: object
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
        enabled:
          description: Make it available or not.
          type: boolean
          default: true
          x-speakeasy-param-computed: false
      required:
        - name
        - type
        - configuration
    ResponseTemplate:
      description: API response template
      type: object
      properties:
        status:
          description: HTTP Status to return
          type: integer
          x-speakeasy-param-computed: false
        headers:
          description: Headers to return as key/value pairs
          type: object
          additionalProperties:
            type: string
          x-speakeasy-param-computed: false
        body:
          description: Response body (use `Content-Type` header to specify the content type)
          type: string
          x-speakeasy-param-computed: false
        propagateErrorKeyToLogs:
          type: boolean
          description: Log the key associated with this response template
          default: false
          x-speakeasy-param-computed: false
      required:
        - status
    Sampling:
      description: API analytics sampling (message API only). This is meant to log only a portion to avoid overflowing the log sink.
      type: object
      properties:
        type:
          type: string
          description: |
            The type of the sampling:

            `PROBABILITY`: based on a specified probability,
            `TEMPORAL`: all messages for on time duration,
            `COUNT`: for every number of specified messages
          enum:
            - PROBABILITY
            - TEMPORAL
            - COUNT
          x-speakeasy-param-computed: false
        value:
          type: string
          description: |
            The value of the sampling:

            `PROBABILITY`: between `0.01` and `0.5`,
            `TEMPORAL`: ISO-8601 duration format, 1 second minimum (PT1S)
            `COUNT`: greater than `1`,
          x-speakeasy-param-computed: false
      required:
        - type
    MembershipMemberType:
      type: string
      description: The type of membership
      enum:
        - USER
        - GROUP
      examples:
        - USER
    Selector:
      description: Flow selector
      oneOf:
        - $ref: "#/components/schemas/HttpSelector"
        - $ref: "#/components/schemas/ChannelSelector"
        - $ref: "#/components/schemas/ConditionSelector"
      discriminator:
        propertyName: type
        mapping:
          HTTP: "#/components/schemas/HttpSelector"
          CHANNEL: "#/components/schemas/ChannelSelector"
          CONDITION: "#/components/schemas/ConditionSelector"
    BaseSelector:
      description: Base selector
      properties:
        type:
          type: string
          description: Selector type.
          examples:
            - HTTP
          enum:
            - HTTP
            - CHANNEL
            - CONDITION
          x-speakeasy-param-computed: false
      discriminator:
        propertyName: type
        mapping:
          HTTP: "#/components/schemas/HttpSelector"
          CHANNEL: "#/components/schemas/ChannelSelector"
          CONDITION: "#/components/schemas/ConditionSelector"
      required:
        - type
    ServiceV4:
      description: Specifies an API property fetch using an external source.
      type: object
      properties:
        overrideConfiguration:
          type: boolean
          description: When the configuration overrides an inherited configuration.
          default: false
          x-speakeasy-param-computed: false
        configuration:
          type: object
          description: JSON configuration of the service.
          x-speakeasy-param-computed: false
          x-speakeasy-type-override: any
        enabled:
          type: boolean
          description: Is the service enabled or not.
          default: true
          x-speakeasy-param-computed: false
        type:
          type: string
          description: The service plugin ID used.
          x-speakeasy-param-computed: false
      required:
        - type
        - configuration
    BaseStep:
      description: Base step
      type: object
      properties:
        name:
          type: string
          description: The name of the step
          maxLength: 64
          x-speakeasy-param-computed: false
        description:
          type: string
          description: A description for the step
          maxLength: 256
          x-speakeasy-param-computed: false
        enabled:
          type: boolean
          description: To enable the step globally.
          default: true
          x-speakeasy-param-computed: false
        policy:
          type: string
          description: The policy of the step (plugin ID)
          maxLength: 64
          x-speakeasy-param-computed: false
        configuration:
          type: object
          description: JSON Object configuration of the policy used.
          x-speakeasy-type-override: any
          x-speakeasy-param-computed: false
        condition:
          type: string
          description: The EL condition return a boolean to execute this step at runtime. Empty expression implies it is enabled.
          maxLength: 1024
          x-speakeasy-param-computed: false
      required:
        - enabled
        - policy
    StepV4:
      description: Flow step
      allOf:
        - $ref: "#/components/schemas/BaseStep"
        - properties:
            messageCondition:
              type: string
              description: The message condition of the step (for message API)
              maxLength: 256
    SubscriptionListener:
      description: Subscription listener for message API.
      title: "SubscriptionListener"
      required:
        - type
      allOf:
        - $ref: "#/components/schemas/BaseListener"
    TcpListener:
      description: TCP listener
      title: "TcpListener"
      required:
        - type
      allOf:
        - $ref: "#/components/schemas/BaseListener"
        - type: object
          properties:
            hosts:
              description: >-
                A list of hostnames for which the API will match against SNI.  This must be unique for all TCP listener for a given server id. See 'servers' attribute
              type: array
              minItems: 1
              items:
                type: string
                minLength: 1
          required:
            - "hosts"
    KafkaListener:
      description: Kafka listener
      title: "KafkaListener"
      required:
        - type
      allOf:
        - $ref: "#/components/schemas/BaseListener"
        - type: object
          properties:
            host:
              description: A hostname for which the API will match against SNI.
              type: string
          required:
            - "host"
    FailoverV4:
      description: Defines the failover behavior to bypass endpoints when some are slow.
      type: object
      properties:
        enabled:
          type: boolean
          description: Automatically redirects request to the next endpoint if the response is too slow.
          default: false
          x-speakeasy-param-computed: false
        maxRetries:
          type: integer
          format: int32
          description: Limit the number of retry attempts before recording an error. Each attempt dynamically selects an endpoint based on the load balancing algorithm.
          default: 2
          minimum: 0
          x-speakeasy-param-computed: false
        slowCallDuration:
          type: integer
          format: int64
          description: Define a threshold for slow responses. Requests exceeding this duration are recorded as slow.
          default: 2000
          minimum: 50
          x-speakeasy-param-computed: false
        openStateDuration:
          type: integer
          format: int64
          description: The duration in milliseconds to indicate how long the circuit breaker should stay open, before it switches to half open.
          default: 10000
          minimum: 500
          x-speakeasy-param-computed: false
        maxFailures:
          type: integer
          format: int32
          description: The maximum number of failures allowed before the circuit breaker can calculate the error rate.
          default: 5
          minimum: 1
          x-speakeasy-param-computed: false
        perSubscription:
          type: boolean
          description: If true, a circuit breaker breaker will be dedicated for each subscriber, else, one and only circuit breaker will be used for the API.
          default: true
          x-speakeasy-param-computed: false
    Metadata:
      description: Metadata is a generic data structure used internally
      type: object
      properties:
        key:
          type: string
          description: The key of the metadata if different from sanitized name (lowercase + hyphens).
          minLength: 1
          x-speakeasy-param-computed: false
        name:
          type: string
          description: The name of the metadata.
          x-speakeasy-param-computed: false
        format:
          $ref: "#/components/schemas/MetadataFormat"
          x-speakeasy-param-computed: false
        value:
          type: string
          description: The value of the metadata.
          minLength: 1
          x-speakeasy-param-computed: false
        defaultValue:
          type: string
          description: The default value of the metadata if the value is not set.
          x-speakeasy-param-computed: false
        hidden:
          type: boolean
          description: if this metadata should be hidden
          default: false
          x-speakeasy-param-computed: false
      required:
        - name
        - format
    MetadataFormat:
      type: string
      description: The format of the metadata.
      examples:
        - STRING
      enum:
        - STRING
        - NUMERIC
        - BOOLEAN
        - DATE
        - MAIL
        - URL
    LifecycleState:
      type: string
      description: STARTED will make this API callable on tis context path, STOPPED will yield 404 error
      examples:
        - STARTED
      enum:
        - CLOSED
        - INITIALIZED
        - STARTED
        - STOPPED
        - STOPPING
    HttpError:
      description: Error
      type: object
      properties:
        httpStatus:
          type: integer
          format: int32
          description: Error code
          examples:
            - 400
          x-speakeasy-param-computed: false
        message:
          type: string
          description: Error message
          examples:
            - Bad request
          x-speakeasy-param-computed: false
        technicalCode:
          type: string
          description: A technical code to identify the error
          examples:
            - invalid.import.definition
          x-speakeasy-param-computed: false
        parameters:
          type: object
          description: A map of parameters to be used in the error message
          additionalProperties:
            type: string
          x-speakeasy-param-computed: false
        details:
          type: array
          description: A list of details about the error
          items:
            type: object
            properties:
              message:
                type: string
                description: The error message
                examples:
                  - Bad request
              location:
                type: string
                description: The json path of the field in error.
                examples:
                  - updateApi.properties[0].key
              invalidValue:
                type: object
                description: The invalid value.
                examples:
                  - $...faulty
          x-speakeasy-param-computed: false
    Errors:
      description: >-
        When a resource has been created regardless of errors, this field is used to persist the error message encountered during validation
      properties:
        severe:
          description: >-
            Severe errors do not pass validation and will block creation/update/delete hence, this field should always be populated during the validation phase and is very unlikely to be persisted client side.
          items:
            type: string
          type: array
          x-speakeasy-param-computed: false
        warning:
          description: >-
            Warning errors do not block object creation/update/delete, most of the time because the value is ignored or defaulted.
          items:
            type: string
          type: array
          x-speakeasy-param-computed: false
      type: object
      x-speakeasy-terraform-ignore: true
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    Unauthenticated:
      description: Unauthenticated
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    BadRequest:
      description: Request is invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    Error:
      description: Default error
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: "#/components/schemas/HttpError"
  parameters:
    envIdParam:
      name: envId
      in: path
      required: true
      description: environment ID
      schema:
        type: string
        default: DEFAULT
        examples:
          - a44e0d1b-9fa9-4d64-8b76-3634623a2e27
      x-speakeasy-name-override: environmentId
    orgIdParam:
      name: orgId
      in: path
      required: true
      description: organization ID
      schema:
        type: string
        default: DEFAULT
        examples:
          - dedd0e0f-b3e9-4d2f-89cd-b2a9de7cb145
      x-speakeasy-name-override: organizationId
    dryRunQueryParam:
      name: dryRun
      in: query
      description: "For modifying requests, this parameter allow you to test the result of an endpoint without actually persisting \nthe state of the underlying spec.\n"
      schema:
        type: boolean
        default: false
        examples:
          - true
      x-speakeasy-terraform-ignore: true
    hridParam:
      name: hrid
      in: path
      required: true
      description: Human-readable ID of a spec
      schema:
        type: string
        examples:
          - my_demo_api
          - simple_demo_app
          - keyless_demo_plan
          - demo_subscription
          - demo_shared_policy_groups
      x-speakeasy-param-force-new: true
    apiHridParam:
      name: apiHrid
      in: path
      required: true
      description: Human-readable ID of api
      schema:
        type: string
        examples:
          - my_demo_api
  securitySchemes:
    BasicAuth:
      description: Basic authentication
      type: http
      scheme: basic
    BearerAuth:
      description: Service account authentication
      type: http
      scheme: bearer
      bearerFormat: APIM service account token
    CloudAuth:
      description: Gravitee Cloud Token authentication
      type: http
      scheme: bearer
      bearerFormat: JWT
x-speakeasy-retries:
  strategy: backoff
  backoff:
    initialInterval: 500 # 500 milliseconds
    maxInterval: 30000 # 30 seconds
    maxElapsedTime: 60000 # 1 minute
    exponent: 1.5
  statusCodes:
    - 5XX
  retryConnectionErrors: true
x-speakeasy-globals:
  parameters:
    - $ref: '#/components/parameters/envIdParam'
    - $ref: '#/components/parameters/orgIdParam'
