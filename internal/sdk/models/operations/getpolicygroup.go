// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/models/shared"
	"net/http"
)

type GetPolicyGroupGlobals struct {
	// Id of an organization.
	OrganizationID *string `default:"DEFAULT" pathParam:"style=simple,explode=false,name=orgId"`
	// Id of an environment.
	EnvironmentID *string `default:"DEFAULT" pathParam:"style=simple,explode=false,name=envId"`
}

func (g GetPolicyGroupGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetPolicyGroupGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (g *GetPolicyGroupGlobals) GetOrganizationID() *string {
	if g == nil {
		return nil
	}
	return g.OrganizationID
}

func (g *GetPolicyGroupGlobals) GetEnvironmentID() *string {
	if g == nil {
		return nil
	}
	return g.EnvironmentID
}

type GetPolicyGroupRequest struct {
	// Id of an organization.
	OrganizationID *string `default:"DEFAULT" pathParam:"style=simple,explode=false,name=orgId"`
	// Id of an environment.
	EnvironmentID *string `default:"DEFAULT" pathParam:"style=simple,explode=false,name=envId"`
	// Human-readable ID of a spec
	Hrid string `pathParam:"style=simple,explode=false,name=hrid"`
}

func (g GetPolicyGroupRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetPolicyGroupRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"hrid"}); err != nil {
		return err
	}
	return nil
}

func (g *GetPolicyGroupRequest) GetOrganizationID() *string {
	if g == nil {
		return nil
	}
	return g.OrganizationID
}

func (g *GetPolicyGroupRequest) GetEnvironmentID() *string {
	if g == nil {
		return nil
	}
	return g.EnvironmentID
}

func (g *GetPolicyGroupRequest) GetHrid() string {
	if g == nil {
		return ""
	}
	return g.Hrid
}

type GetPolicyGroupResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful retrieval
	SharedPolicyGroupState *shared.SharedPolicyGroupState
}

func (g *GetPolicyGroupResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetPolicyGroupResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetPolicyGroupResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetPolicyGroupResponse) GetSharedPolicyGroupState() *shared.SharedPolicyGroupState {
	if g == nil {
		return nil
	}
	return g.SharedPolicyGroupState
}
