// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/models/shared"
	"net/http"
)

type CreateOrUpdateAPISubscriptionsGlobals struct {
	// organization ID
	OrganizationID *string `pathParam:"style=simple,explode=false,name=orgId"`
	// environment ID
	EnvironmentID *string `default:"DEFAULT" pathParam:"style=simple,explode=false,name=envId"`
}

func (c CreateOrUpdateAPISubscriptionsGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateOrUpdateAPISubscriptionsGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *CreateOrUpdateAPISubscriptionsGlobals) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *CreateOrUpdateAPISubscriptionsGlobals) GetEnvironmentID() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentID
}

type CreateOrUpdateAPISubscriptionsRequest struct {
	// organization ID
	OrganizationID *string `pathParam:"style=simple,explode=false,name=orgId"`
	// environment ID
	EnvironmentID *string `default:"DEFAULT" pathParam:"style=simple,explode=false,name=envId"`
	// Human-readable ID of api
	APIHrid string `pathParam:"style=simple,explode=false,name=apiHrid"`
	// Subscription specification
	SubscriptionSpec shared.SubscriptionSpec `request:"mediaType=application/json"`
}

func (c CreateOrUpdateAPISubscriptionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateOrUpdateAPISubscriptionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"apiHrid", "SubscriptionSpec"}); err != nil {
		return err
	}
	return nil
}

func (o *CreateOrUpdateAPISubscriptionsRequest) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *CreateOrUpdateAPISubscriptionsRequest) GetEnvironmentID() *string {
	if o == nil {
		return nil
	}
	return o.EnvironmentID
}

func (o *CreateOrUpdateAPISubscriptionsRequest) GetAPIHrid() string {
	if o == nil {
		return ""
	}
	return o.APIHrid
}

func (o *CreateOrUpdateAPISubscriptionsRequest) GetSubscriptionSpec() shared.SubscriptionSpec {
	if o == nil {
		return shared.SubscriptionSpec{}
	}
	return o.SubscriptionSpec
}

type CreateOrUpdateAPISubscriptionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// State of the successfully created Subscription
	SubscriptionState *shared.SubscriptionState
	// Request is invalid
	HTTPError *shared.HTTPError
	// Default error
	Error *shared.Error
}

func (o *CreateOrUpdateAPISubscriptionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateOrUpdateAPISubscriptionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateOrUpdateAPISubscriptionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateOrUpdateAPISubscriptionsResponse) GetSubscriptionState() *shared.SubscriptionState {
	if o == nil {
		return nil
	}
	return o.SubscriptionState
}

func (o *CreateOrUpdateAPISubscriptionsResponse) GetHTTPError() *shared.HTTPError {
	if o == nil {
		return nil
	}
	return o.HTTPError
}

func (o *CreateOrUpdateAPISubscriptionsResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
