// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
	"time"
)

// SubscriptionState - State of subscription that has been created/update
type SubscriptionState struct {
	// A unique human readable id identifying this resource
	Hrid string `json:"hrid"`
	// Application's Hrid that needs to subscribe to the API.
	ApplicationHrid string `json:"applicationHrid"`
	// API plan's Hrid
	PlanHrid string     `json:"planHrid"`
	EndingAt *time.Time `json:"endingAt,omitempty"`
	// When a resource has been created regardless of errors, this field is used to persist the error message encountered during validation
	Errors *Errors `json:"errors,omitempty"`
	// Subscription's uuid.
	ID *string `json:"id,omitempty"`
	// The API's Hrid.
	APIHrid    string     `json:"apiHrid"`
	StartingAt *time.Time `json:"startingAt,omitempty"`
}

func (s SubscriptionState) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SubscriptionState) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, []string{"hrid", "applicationHrid", "planHrid", "apiHrid"}); err != nil {
		return err
	}
	return nil
}

func (o *SubscriptionState) GetHrid() string {
	if o == nil {
		return ""
	}
	return o.Hrid
}

func (o *SubscriptionState) GetApplicationHrid() string {
	if o == nil {
		return ""
	}
	return o.ApplicationHrid
}

func (o *SubscriptionState) GetPlanHrid() string {
	if o == nil {
		return ""
	}
	return o.PlanHrid
}

func (o *SubscriptionState) GetEndingAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndingAt
}

func (o *SubscriptionState) GetErrors() *Errors {
	if o == nil {
		return nil
	}
	return o.Errors
}

func (o *SubscriptionState) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SubscriptionState) GetAPIHrid() string {
	if o == nil {
		return ""
	}
	return o.APIHrid
}

func (o *SubscriptionState) GetStartingAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartingAt
}
