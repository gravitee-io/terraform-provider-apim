// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// APILifecycleState - The status of the API regarding the console.
type APILifecycleState string

const (
	APILifecycleStateArchived    APILifecycleState = "ARCHIVED"
	APILifecycleStateCreated     APILifecycleState = "CREATED"
	APILifecycleStateDeprecated  APILifecycleState = "DEPRECATED"
	APILifecycleStatePublished   APILifecycleState = "PUBLISHED"
	APILifecycleStateUnpublished APILifecycleState = "UNPUBLISHED"
)

func (e APILifecycleState) ToPointer() *APILifecycleState {
	return &e
}
func (e *APILifecycleState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARCHIVED":
		fallthrough
	case "CREATED":
		fallthrough
	case "DEPRECATED":
		fallthrough
	case "PUBLISHED":
		fallthrough
	case "UNPUBLISHED":
		*e = APILifecycleState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APILifecycleState: %v", v)
	}
}
