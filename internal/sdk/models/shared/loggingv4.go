// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// LoggingV4 - API logging configuration (Not for native APIs)
type LoggingV4 struct {
	// Filter using EL what request should be logged
	Condition *string `json:"condition,omitempty"`
	// Filter using EL what message should be logged
	MessageCondition *string `json:"messageCondition,omitempty"`
	// API logging content when one of logging mode is enabled (Not for native APIs)
	Content *LoggingContentV4 `json:"content,omitempty"`
	// Logging phase when one of logging mode is enabled (Not for native APIs)
	Phase *LoggingPhase `json:"phase,omitempty"`
	// API logging mode (Not for native APIs)
	Mode *LoggingModeV4 `json:"mode,omitempty"`
}

func (l *LoggingV4) GetCondition() *string {
	if l == nil {
		return nil
	}
	return l.Condition
}

func (l *LoggingV4) GetMessageCondition() *string {
	if l == nil {
		return nil
	}
	return l.MessageCondition
}

func (l *LoggingV4) GetContent() *LoggingContentV4 {
	if l == nil {
		return nil
	}
	return l.Content
}

func (l *LoggingV4) GetPhase() *LoggingPhase {
	if l == nil {
		return nil
	}
	return l.Phase
}

func (l *LoggingV4) GetMode() *LoggingModeV4 {
	if l == nil {
		return nil
	}
	return l.Mode
}
