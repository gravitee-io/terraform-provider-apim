// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// Errors - When a resource has been created regardless of errors, this field is used to persist the error message encountered during validation
type Errors struct {
	// Severe errors do not pass validation and will block creation/update/delete hence, this field should always be populated during the validation phase and is very unlikely to be persisted client side.
	Severe []string `json:"severe,omitempty"`
	// Warning errors do not block object creation/update/delete, most of the time because the value is ignored or defaulted.
	Warning []string `json:"warning,omitempty"`
}

func (e *Errors) GetSevere() []string {
	if e == nil {
		return nil
	}
	return e.Severe
}

func (e *Errors) GetWarning() []string {
	if e == nil {
		return nil
	}
	return e.Warning
}
