// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// Errors - When a resource has been created regardless of errors, this field is used to persist the error message encountered during admission
type Errors struct {
	// severe errors do not pass admission and will block reconcile hence, this field should always be populated during the admission phase and is very unlikely to be persisted in the status
	Severe []string `json:"severe,omitempty"`
	// warning errors do not block object reconciliation,
	// most of the time because the value is ignored or defaulted
	// when the resource gets synced with APIM
	Warning []string `json:"warning,omitempty"`
}

func (o *Errors) GetSevere() []string {
	if o == nil {
		return nil
	}
	return o.Severe
}

func (o *Errors) GetWarning() []string {
	if o == nil {
		return nil
	}
	return o.Warning
}
