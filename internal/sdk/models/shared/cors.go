// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
)

type AllowMethod string

const (
	AllowMethodWildcard AllowMethod = "*"
	AllowMethodGet      AllowMethod = "GET"
	AllowMethodDelete   AllowMethod = "DELETE"
	AllowMethodPatch    AllowMethod = "PATCH"
	AllowMethodPost     AllowMethod = "POST"
	AllowMethodPut      AllowMethod = "PUT"
	AllowMethodOptions  AllowMethod = "OPTIONS"
	AllowMethodTrace    AllowMethod = "TRACE"
	AllowMethodHead     AllowMethod = "HEAD"
)

func (e AllowMethod) ToPointer() *AllowMethod {
	return &e
}
func (e *AllowMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "*":
		fallthrough
	case "GET":
		fallthrough
	case "DELETE":
		fallthrough
	case "PATCH":
		fallthrough
	case "POST":
		fallthrough
	case "PUT":
		fallthrough
	case "OPTIONS":
		fallthrough
	case "TRACE":
		fallthrough
	case "HEAD":
		*e = AllowMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllowMethod: %v", v)
	}
}

// Cors - Http listener Cross-Origin Resource Sharing
type Cors struct {
	// Enable CORS
	Enabled *bool `json:"enabled,omitempty"`
	// `Access-Control-Allow-Credentials`: Indicates whether or not the response to the request can be exposed when the credentials flag is true.
	//
	AllowCredentials *bool `json:"allowCredentials,omitempty"`
	// `Access-Control-Allow-Headers`: Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.
	//
	AllowHeaders []string `json:"allowHeaders,omitempty"`
	// `Access-Control-Allow-Methods`: Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request. HTTP methods that are allow to access the resource.
	//
	AllowMethods []AllowMethod `json:"allowMethods,omitempty"`
	// `Access-Control-Allow-Origin`: The origin parameter specifies a URI that may access the resource. Scheme, domain and port are part of the same-origin definition.
	// If you choose to enable '*' it means that is allows all requests, regardless of origin. URIs RegExp patterns that may access the resource
	//
	AllowOrigin []string `json:"allowOrigin,omitempty"`
	// `Access-Control-Expose-Headers`: This header lets a server whitelist headers that browsers are allowed to access.
	//
	ExposeHeaders []string `json:"exposeHeaders,omitempty"`
	// How long (in seconds) the results of a preflight request can be cached (-1 if disabled).
	MaxAge *int `default:"-1" json:"maxAge"`
	// Allow the Gateway to run policies during in pre-flight request
	RunPolicies *bool `json:"runPolicies,omitempty"`
}

func (c Cors) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *Cors) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (c *Cors) GetEnabled() *bool {
	if c == nil {
		return nil
	}
	return c.Enabled
}

func (c *Cors) GetAllowCredentials() *bool {
	if c == nil {
		return nil
	}
	return c.AllowCredentials
}

func (c *Cors) GetAllowHeaders() []string {
	if c == nil {
		return nil
	}
	return c.AllowHeaders
}

func (c *Cors) GetAllowMethods() []AllowMethod {
	if c == nil {
		return nil
	}
	return c.AllowMethods
}

func (c *Cors) GetAllowOrigin() []string {
	if c == nil {
		return nil
	}
	return c.AllowOrigin
}

func (c *Cors) GetExposeHeaders() []string {
	if c == nil {
		return nil
	}
	return c.ExposeHeaders
}

func (c *Cors) GetMaxAge() *int {
	if c == nil {
		return nil
	}
	return c.MaxAge
}

func (c *Cors) GetRunPolicies() *bool {
	if c == nil {
		return nil
	}
	return c.RunPolicies
}
