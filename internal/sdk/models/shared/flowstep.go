// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
)

type FlowStep struct {
	// FlowStep condition
	Condition *string `json:"condition,omitempty"`
	// FlowStep configuration is a map of arbitrary key-values
	Configuration *string `json:"configuration,omitempty"`
	// FlowStep description
	Description *string `json:"description,omitempty"`
	// Indicate if this FlowStep is enabled or not
	Enabled *bool `default:"true" json:"enabled"`
	// The message condition (supports EL expressions)
	MessageCondition *string `json:"messageCondition,omitempty"`
	// FlowStep name
	Name *string `json:"name,omitempty"`
	// FlowStep policy
	Policy *string `json:"policy,omitempty"`
}

func (f FlowStep) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FlowStep) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FlowStep) GetCondition() *string {
	if o == nil {
		return nil
	}
	return o.Condition
}

func (o *FlowStep) GetConfiguration() *string {
	if o == nil {
		return nil
	}
	return o.Configuration
}

func (o *FlowStep) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *FlowStep) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *FlowStep) GetMessageCondition() *string {
	if o == nil {
		return nil
	}
	return o.MessageCondition
}

func (o *FlowStep) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *FlowStep) GetPolicy() *string {
	if o == nil {
		return nil
	}
	return o.Policy
}
