// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FlowMode - DEFAULT : all flows that match the conditions are executed in the order they are defined BEST_MATCH: only the best matching flow will be executed
type FlowMode string

const (
	FlowModeBestMatch FlowMode = "BEST_MATCH"
	FlowModeDefault   FlowMode = "DEFAULT"
)

func (e FlowMode) ToPointer() *FlowMode {
	return &e
}
func (e *FlowMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BEST_MATCH":
		fallthrough
	case "DEFAULT":
		*e = FlowMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FlowMode: %v", v)
	}
}
