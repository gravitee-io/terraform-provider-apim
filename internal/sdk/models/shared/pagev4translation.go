// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
	"time"
)

// PageV4Translation - Documentation page translation. Can be of multiple formats.
type PageV4Translation struct {
	// A unique human readable id identifying this resource
	Hrid string `json:"hrid"`
	// Page's cross uuid.
	CrossID *string `json:"crossId,omitempty"`
	// Page's name.
	Name *string `json:"name,omitempty"`
	// The type of the page.
	Type PageType `json:"type"`
	// Page's content.
	Content *string `json:"content,omitempty"`
	// Page's order.
	Order *int64 `json:"order,omitempty"`
	// Page's last contributor. Id of a user.
	LastContributor *string `json:"lastContributor,omitempty"`
	// Page's published status.
	Published *bool `json:"published,omitempty"`
	// The visibility of the resource regarding the portal.
	Visibility *Visibility `default:"PUBLIC" json:"visibility"`
	// Page's last update date.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Page's content type.
	ContentType *string `json:"contentType,omitempty"`
	// Page source
	Source *PageSource `json:"source,omitempty"`
	// Page's configuration.
	Configuration map[string]string `json:"configuration,omitempty"`
	// Page's homepage status.
	Homepage *bool `json:"homepage,omitempty"`
	// Page's parent id.
	ParentID *string `json:"parentId,omitempty"`
	// Page's parent path.
	ParentPath *string `json:"parentPath,omitempty"`
	// Flag to restrict access to user matching the restrictions.
	ExcludedAccessControls *bool `json:"excludedAccessControls,omitempty"`
	// List of access controls.
	AccessControls []AccessControl `json:"accessControls,omitempty"`
	// List of attached media.
	AttachedMedia []PageMedia `json:"attachedMedia,omitempty"`
	// Page's metadata.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Page revision
	ContentRevision *Revision `json:"contentRevision,omitempty"`
	// If folder is published but not shown in Portal.
	Hidden *bool `json:"hidden,omitempty"`
	// If page is used as General Conditions of an active plan.
	GeneralConditions *bool `json:"generalConditions,omitempty"`
}

func (p PageV4Translation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PageV4Translation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"hrid", "type"}); err != nil {
		return err
	}
	return nil
}

func (o *PageV4Translation) GetHrid() string {
	if o == nil {
		return ""
	}
	return o.Hrid
}

func (o *PageV4Translation) GetCrossID() *string {
	if o == nil {
		return nil
	}
	return o.CrossID
}

func (o *PageV4Translation) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PageV4Translation) GetType() PageType {
	if o == nil {
		return PageType("")
	}
	return o.Type
}

func (o *PageV4Translation) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *PageV4Translation) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *PageV4Translation) GetLastContributor() *string {
	if o == nil {
		return nil
	}
	return o.LastContributor
}

func (o *PageV4Translation) GetPublished() *bool {
	if o == nil {
		return nil
	}
	return o.Published
}

func (o *PageV4Translation) GetVisibility() *Visibility {
	if o == nil {
		return nil
	}
	return o.Visibility
}

func (o *PageV4Translation) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *PageV4Translation) GetContentType() *string {
	if o == nil {
		return nil
	}
	return o.ContentType
}

func (o *PageV4Translation) GetSource() *PageSource {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *PageV4Translation) GetConfiguration() map[string]string {
	if o == nil {
		return nil
	}
	return o.Configuration
}

func (o *PageV4Translation) GetHomepage() *bool {
	if o == nil {
		return nil
	}
	return o.Homepage
}

func (o *PageV4Translation) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *PageV4Translation) GetParentPath() *string {
	if o == nil {
		return nil
	}
	return o.ParentPath
}

func (o *PageV4Translation) GetExcludedAccessControls() *bool {
	if o == nil {
		return nil
	}
	return o.ExcludedAccessControls
}

func (o *PageV4Translation) GetAccessControls() []AccessControl {
	if o == nil {
		return nil
	}
	return o.AccessControls
}

func (o *PageV4Translation) GetAttachedMedia() []PageMedia {
	if o == nil {
		return nil
	}
	return o.AttachedMedia
}

func (o *PageV4Translation) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *PageV4Translation) GetContentRevision() *Revision {
	if o == nil {
		return nil
	}
	return o.ContentRevision
}

func (o *PageV4Translation) GetHidden() *bool {
	if o == nil {
		return nil
	}
	return o.Hidden
}

func (o *PageV4Translation) GetGeneralConditions() *bool {
	if o == nil {
		return nil
	}
	return o.GeneralConditions
}
