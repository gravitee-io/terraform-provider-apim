// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type HTTPErrorDetail struct {
	// The error message
	Message *string `json:"message,omitempty"`
	// The json path of the field in error.
	Location *string `json:"location,omitempty"`
	// The invalid value.
	InvalidValue *string `json:"invalidValue,omitempty"`
}

func (h *HTTPErrorDetail) GetMessage() *string {
	if h == nil {
		return nil
	}
	return h.Message
}

func (h *HTTPErrorDetail) GetLocation() *string {
	if h == nil {
		return nil
	}
	return h.Location
}

func (h *HTTPErrorDetail) GetInvalidValue() *string {
	if h == nil {
		return nil
	}
	return h.InvalidValue
}

// HTTPError - Error
type HTTPError struct {
	// Error code
	HTTPStatus *int `json:"httpStatus,omitempty"`
	// Error message
	Message *string `json:"message,omitempty"`
	// A technical code to identify the error
	TechnicalCode *string `json:"technicalCode,omitempty"`
	// A map of parameters to be used in the error message
	Parameters map[string]string `json:"parameters,omitempty"`
	// A list of details about the error
	Details []HTTPErrorDetail `json:"details,omitempty"`
}

func (h *HTTPError) GetHTTPStatus() *int {
	if h == nil {
		return nil
	}
	return h.HTTPStatus
}

func (h *HTTPError) GetMessage() *string {
	if h == nil {
		return nil
	}
	return h.Message
}

func (h *HTTPError) GetTechnicalCode() *string {
	if h == nil {
		return nil
	}
	return h.TechnicalCode
}

func (h *HTTPError) GetParameters() map[string]string {
	if h == nil {
		return nil
	}
	return h.Parameters
}

func (h *HTTPError) GetDetails() []HTTPErrorDetail {
	if h == nil {
		return nil
	}
	return h.Details
}
