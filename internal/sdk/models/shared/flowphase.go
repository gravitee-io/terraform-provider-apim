// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FlowPhase - The execution phase of a policy.
type FlowPhase string

const (
	FlowPhaseRequest   FlowPhase = "REQUEST"
	FlowPhaseResponse  FlowPhase = "RESPONSE"
	FlowPhaseInteract  FlowPhase = "INTERACT"
	FlowPhaseConnect   FlowPhase = "CONNECT"
	FlowPhasePublish   FlowPhase = "PUBLISH"
	FlowPhaseSubscribe FlowPhase = "SUBSCRIBE"
)

func (e FlowPhase) ToPointer() *FlowPhase {
	return &e
}
func (e *FlowPhase) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST":
		fallthrough
	case "RESPONSE":
		fallthrough
	case "INTERACT":
		fallthrough
	case "CONNECT":
		fallthrough
	case "PUBLISH":
		fallthrough
	case "SUBSCRIBE":
		*e = FlowPhase(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FlowPhase: %v", v)
	}
}
