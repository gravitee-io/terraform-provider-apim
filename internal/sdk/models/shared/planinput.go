// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PlanInput struct {
	Name              *string       `json:"name,omitempty"`
	Description       *string       `json:"description,omitempty"`
	Security          *PlanSecurity `json:"security,omitempty"`
	Characteristics   []string      `json:"characteristics,omitempty"`
	ExcludedGroups    []string      `json:"excludedGroups,omitempty"`
	GeneralConditions *string       `json:"generalConditions,omitempty"`
	Order             *int64        `json:"order,omitempty"`
	SelectionRule     *string       `json:"selectionRule,omitempty"`
	// Plan status.
	Status PlanStatus `json:"status"`
	Tags   []string   `json:"tags,omitempty"`
	// Plan type.
	Type PlanType `json:"type"`
	// Plan validation type.
	Validation *PlanValidation `json:"validation,omitempty"`
	Flows      []FlowV4Input   `json:"flows,omitempty"`
	// The behavioural mode of the Plan (Standard for classical plan, Push for subscription plan).
	Mode PlanMode `json:"mode"`
}

func (p *PlanInput) GetName() *string {
	if p == nil {
		return nil
	}
	return p.Name
}

func (p *PlanInput) GetDescription() *string {
	if p == nil {
		return nil
	}
	return p.Description
}

func (p *PlanInput) GetSecurity() *PlanSecurity {
	if p == nil {
		return nil
	}
	return p.Security
}

func (p *PlanInput) GetCharacteristics() []string {
	if p == nil {
		return nil
	}
	return p.Characteristics
}

func (p *PlanInput) GetExcludedGroups() []string {
	if p == nil {
		return nil
	}
	return p.ExcludedGroups
}

func (p *PlanInput) GetGeneralConditions() *string {
	if p == nil {
		return nil
	}
	return p.GeneralConditions
}

func (p *PlanInput) GetOrder() *int64 {
	if p == nil {
		return nil
	}
	return p.Order
}

func (p *PlanInput) GetSelectionRule() *string {
	if p == nil {
		return nil
	}
	return p.SelectionRule
}

func (p *PlanInput) GetStatus() PlanStatus {
	if p == nil {
		return PlanStatus("")
	}
	return p.Status
}

func (p *PlanInput) GetTags() []string {
	if p == nil {
		return nil
	}
	return p.Tags
}

func (p *PlanInput) GetType() PlanType {
	if p == nil {
		return PlanType("")
	}
	return p.Type
}

func (p *PlanInput) GetValidation() *PlanValidation {
	if p == nil {
		return nil
	}
	return p.Validation
}

func (p *PlanInput) GetFlows() []FlowV4Input {
	if p == nil {
		return nil
	}
	return p.Flows
}

func (p *PlanInput) GetMode() PlanMode {
	if p == nil {
		return PlanMode("")
	}
	return p.Mode
}
