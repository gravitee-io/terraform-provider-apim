// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
	"time"
)

// PageV4TranslationInput - Documentation page translation. Can be of multiple formats.
type PageV4TranslationInput struct {
	// A unique human readable id identifying this resource
	Hrid string `json:"hrid"`
	// Page's name.
	Name *string `json:"name,omitempty"`
	// The type of the page.
	Type PageType `json:"type"`
	// Page's content.
	Content *string `json:"content,omitempty"`
	// Page's order.
	Order *int64 `json:"order,omitempty"`
	// Page's last contributor. Id of a user.
	LastContributor *string `json:"lastContributor,omitempty"`
	// Page's published status.
	Published *bool `json:"published,omitempty"`
	// The visibility of the resource regarding the portal.
	Visibility *Visibility `default:"PUBLIC" json:"visibility"`
	// Page's last update date.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Page's content type.
	ContentType *string `json:"contentType,omitempty"`
	// Page source
	Source *PageSource `json:"source,omitempty"`
	// Page's configuration.
	Configuration map[string]string `json:"configuration,omitempty"`
	// Page's homepage status.
	Homepage *bool `json:"homepage,omitempty"`
	// Page's parent id.
	ParentID *string `json:"parentId,omitempty"`
	// Page's parent path.
	ParentHrid *string `json:"parentHrid,omitempty"`
	// Flag to restrict access to user matching the restrictions.
	ExcludedAccessControls *bool `json:"excludedAccessControls,omitempty"`
	// List of access controls.
	AccessControls []AccessControl `json:"accessControls,omitempty"`
	// List of attached media.
	AttachedMedia []PageMedia `json:"attachedMedia,omitempty"`
	// Page's metadata.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Page revision
	ContentRevision *Revision `json:"contentRevision,omitempty"`
	// If folder is published but not shown in Portal.
	Hidden *bool `json:"hidden,omitempty"`
	// If page is used as General Conditions of an active plan.
	GeneralConditions *bool `json:"generalConditions,omitempty"`
}

func (p PageV4TranslationInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PageV4TranslationInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"hrid", "type"}); err != nil {
		return err
	}
	return nil
}

func (p *PageV4TranslationInput) GetHrid() string {
	if p == nil {
		return ""
	}
	return p.Hrid
}

func (p *PageV4TranslationInput) GetName() *string {
	if p == nil {
		return nil
	}
	return p.Name
}

func (p *PageV4TranslationInput) GetType() PageType {
	if p == nil {
		return PageType("")
	}
	return p.Type
}

func (p *PageV4TranslationInput) GetContent() *string {
	if p == nil {
		return nil
	}
	return p.Content
}

func (p *PageV4TranslationInput) GetOrder() *int64 {
	if p == nil {
		return nil
	}
	return p.Order
}

func (p *PageV4TranslationInput) GetLastContributor() *string {
	if p == nil {
		return nil
	}
	return p.LastContributor
}

func (p *PageV4TranslationInput) GetPublished() *bool {
	if p == nil {
		return nil
	}
	return p.Published
}

func (p *PageV4TranslationInput) GetVisibility() *Visibility {
	if p == nil {
		return nil
	}
	return p.Visibility
}

func (p *PageV4TranslationInput) GetUpdatedAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.UpdatedAt
}

func (p *PageV4TranslationInput) GetContentType() *string {
	if p == nil {
		return nil
	}
	return p.ContentType
}

func (p *PageV4TranslationInput) GetSource() *PageSource {
	if p == nil {
		return nil
	}
	return p.Source
}

func (p *PageV4TranslationInput) GetConfiguration() map[string]string {
	if p == nil {
		return nil
	}
	return p.Configuration
}

func (p *PageV4TranslationInput) GetHomepage() *bool {
	if p == nil {
		return nil
	}
	return p.Homepage
}

func (p *PageV4TranslationInput) GetParentID() *string {
	if p == nil {
		return nil
	}
	return p.ParentID
}

func (p *PageV4TranslationInput) GetParentHrid() *string {
	if p == nil {
		return nil
	}
	return p.ParentHrid
}

func (p *PageV4TranslationInput) GetExcludedAccessControls() *bool {
	if p == nil {
		return nil
	}
	return p.ExcludedAccessControls
}

func (p *PageV4TranslationInput) GetAccessControls() []AccessControl {
	if p == nil {
		return nil
	}
	return p.AccessControls
}

func (p *PageV4TranslationInput) GetAttachedMedia() []PageMedia {
	if p == nil {
		return nil
	}
	return p.AttachedMedia
}

func (p *PageV4TranslationInput) GetMetadata() map[string]string {
	if p == nil {
		return nil
	}
	return p.Metadata
}

func (p *PageV4TranslationInput) GetContentRevision() *Revision {
	if p == nil {
		return nil
	}
	return p.ContentRevision
}

func (p *PageV4TranslationInput) GetHidden() *bool {
	if p == nil {
		return nil
	}
	return p.Hidden
}

func (p *PageV4TranslationInput) GetGeneralConditions() *bool {
	if p == nil {
		return nil
	}
	return p.GeneralConditions
}
