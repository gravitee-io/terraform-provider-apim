// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/internal/utils"
)

type FailoverV4 struct {
	// Is the failover enabled.
	Enabled *bool `default:"false" json:"enabled"`
	// The maximum number of retries.
	MaxRetries *int `default:"2" json:"maxRetries"`
	// The duration in milliseconds to consider a request as slow.
	SlowCallDuration *int64 `default:"2000" json:"slowCallDuration"`
	// The duration in milliseconds to indicate how long the circuit breaker should stay open, before it switches to half open.
	OpenStateDuration *int64 `default:"10000" json:"openStateDuration"`
	// The maximum number of failures allowed before the circuit breaker can calculate the error rate.
	MaxFailures *int `default:"5" json:"maxFailures"`
	// If true, a circuit breaker breaker will be dedicated for each subscriber, else, one and only circuit breaker will be used for the API.
	PerSubscription *bool `default:"true" json:"perSubscription"`
}

func (f FailoverV4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FailoverV4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (f *FailoverV4) GetEnabled() *bool {
	if f == nil {
		return nil
	}
	return f.Enabled
}

func (f *FailoverV4) GetMaxRetries() *int {
	if f == nil {
		return nil
	}
	return f.MaxRetries
}

func (f *FailoverV4) GetSlowCallDuration() *int64 {
	if f == nil {
		return nil
	}
	return f.SlowCallDuration
}

func (f *FailoverV4) GetOpenStateDuration() *int64 {
	if f == nil {
		return nil
	}
	return f.OpenStateDuration
}

func (f *FailoverV4) GetMaxFailures() *int {
	if f == nil {
		return nil
	}
	return f.MaxFailures
}

func (f *FailoverV4) GetPerSubscription() *bool {
	if f == nil {
		return nil
	}
	return f.PerSubscription
}
