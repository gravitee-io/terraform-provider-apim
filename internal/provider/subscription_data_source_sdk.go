// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/gravitee-io/terraform-provider-apim/internal/provider/customtypes"
	"github.com/gravitee-io/terraform-provider-apim/internal/provider/typeconvert"
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/models/operations"
	"github.com/gravitee-io/terraform-provider-apim/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SubscriptionDataSourceModel) RefreshFromSharedSubscriptionState(ctx context.Context, resp *shared.SubscriptionState) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.APIHrid = types.StringValue(resp.APIHrid)
		r.ApplicationHrid = types.StringValue(resp.ApplicationHrid)
		endingAtValuable, endingAtDiags := customtypes.RFC3339Type{}.ValueFromString(ctx, types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.EndingAt)))
		diags.Append(endingAtDiags...)
		r.EndingAt = endingAtValuable.(customtypes.RFC3339)
		r.Hrid = types.StringValue(resp.Hrid)
		r.ID = types.StringPointerValue(resp.ID)
		r.PlanHrid = types.StringValue(resp.PlanHrid)
		r.StartingAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.StartingAt))
	}

	return diags
}

func (r *SubscriptionDataSourceModel) ToOperationsGetSubscriptionRequest(ctx context.Context) (*operations.GetSubscriptionRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	organizationID := new(string)
	if !r.OrganizationID.IsUnknown() && !r.OrganizationID.IsNull() {
		*organizationID = r.OrganizationID.ValueString()
	} else {
		organizationID = nil
	}
	environmentID := new(string)
	if !r.EnvironmentID.IsUnknown() && !r.EnvironmentID.IsNull() {
		*environmentID = r.EnvironmentID.ValueString()
	} else {
		environmentID = nil
	}
	var hrid string
	hrid = r.Hrid.ValueString()

	out := operations.GetSubscriptionRequest{
		OrganizationID: organizationID,
		EnvironmentID:  environmentID,
		Hrid:           hrid,
	}

	return &out, diags
}
